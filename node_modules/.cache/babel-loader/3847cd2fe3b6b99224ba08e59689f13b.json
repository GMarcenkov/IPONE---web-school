{"ast":null,"code":"var _jsxFileName = \"/home/george/Documents/Home/ipon-web-school/src/client/helpers/guards/AuthenticatedRoute.js\";\nimport React from \"react\";\nimport jwt_decode from \"jwt-decode\";\nlet token;\n\nif (localStorage.getItem(\"jwt\") === null) {\n  token = null;\n} else {\n  token = jwt_decode(localStorage.getItem(\"jwt\"));\n}\n\nexport function AuthenticatedRoute(props) {\n  const loggedUser = token; // route requires admin priv\n\n  if (loggedUser.isAdmin) {\n    return React.createElement(props.component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(props.component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })); // window.location.href = \"/\";\n  }\n}","map":{"version":3,"sources":["/home/george/Documents/Home/ipon-web-school/src/client/helpers/guards/AuthenticatedRoute.js"],"names":["React","jwt_decode","token","localStorage","getItem","AuthenticatedRoute","props","loggedUser","isAdmin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAIC,KAAJ;;AAEA,IAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,MAAgC,IAApC,EAA0C;AACxCF,EAAAA,KAAK,GAAG,IAAR;AACD,CAFD,MAEO;AACLA,EAAAA,KAAK,GAAGD,UAAU,CAACE,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAD,CAAlB;AACD;;AAED,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACxC,QAAMC,UAAU,GAAGL,KAAnB,CADwC,CAGxC;;AACA,MAAIK,UAAU,CAACC,OAAf,EAAwB;AACtB,WAAO,oBAAC,KAAD,CAAO,SAAP,oBAAqBF,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFD,MAEO;AACL,WAAO,oBAAC,KAAD,CAAO,SAAP,oBAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP,CADK,CAEL;AACD;AACF","sourcesContent":["import React from \"react\";\nimport jwt_decode from \"jwt-decode\";\n\nlet token;\n\nif (localStorage.getItem(\"jwt\") === null) {\n  token = null;\n} else {\n  token = jwt_decode(localStorage.getItem(\"jwt\"));\n}\n\nexport function AuthenticatedRoute(props) {\n  const loggedUser = token;\n\n  // route requires admin priv\n  if (loggedUser.isAdmin) {\n    return <props.component {...props} />;\n  } else {\n    return <props.component {...props} />;\n    // window.location.href = \"/\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}